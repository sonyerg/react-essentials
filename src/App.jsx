import { useState } from "react";
import CoreConcepts from "./components/CoreConcept/CoreConcept";
import Header from "./components/Header/Header";
import TapButton from "./components/TapButton";
import { CORE_CONCEPTS, EXAMPLES } from "./data";

// The idea behind JSX is that you have an easier time defining the
// target HTML code that should be generated by your components.

// Your JSX code leads to a tree-like code structure that "tells" React how the different
// components are related and how the UI should look like. It then executes appropriate
// commands to manipulate the real DOM to reflect that target structure / code.

function App() {
  const [selectedTopic, setSelectedTopic] = useState();
  // selectedTopic: current state value, setSelected: function to change current state value,
  // useState(): initial state value

  function handleSelect(selectedButton) {
    // selectedButton => components, jsx, props, state.
    setSelectedTopic(selectedButton);
  }

  return (
    <div>
      <Header />
      <main>
        <section id="core-concepts">
          <h2>Core Concepts</h2>
          <ul>
            {/* <CoreConcepts
              title={CORE_CONCEPTS[0].title}
              description={CORE_CONCEPTS[0].description}
              image={CORE_CONCEPTS[0].image}
            />
            shortcut! 
            <CoreConcepts {...CORE_CONCEPTS[1]} />
            <CoreConcepts {...CORE_CONCEPTS[2]} />
            <CoreConcepts {...CORE_CONCEPTS[3]} /> */}

            {/* Generate list output dynamically! */}
            {CORE_CONCEPTS.map((conceptItem) => (
              <CoreConcepts key={conceptItem.title} {...conceptItem} />
            ))}
          </ul>
        </section>
        <section id="examples">
          <h2>Examples</h2>
          <menu>
            <TapButton
              isSelected={selectedTopic === "components"}
              onSelect={function () {
                handleSelect("components");
              }}
            >
              Components
            </TapButton>
            <TapButton
              isSelected={selectedTopic === "jsx"}
              onSelect={() => {
                handleSelect("jsx");
              }}
            >
              JSX
            </TapButton>
            <TapButton
              isSelected={selectedTopic === "props"}
              onSelect={() => {
                handleSelect("props");
              }}
            >
              Props
            </TapButton>
            <TapButton
              isSelected={selectedTopic === "state"}
              onSelect={() => {
                handleSelect("state");
              }}
            >
              State
            </TapButton>
          </menu>
          {!selectedTopic && <p>Please select a topic.</p>}
          {selectedTopic && (
            <div id="tab-content">
              <h3>{EXAMPLES[selectedTopic].title}</h3>
              <p>{EXAMPLES[selectedTopic].description}</p>
              <pre>
                <code>{EXAMPLES[selectedTopic].code}</code>
              </pre>
            </div>
          )}
        </section>
      </main>
    </div>
  );
}

export default App;
